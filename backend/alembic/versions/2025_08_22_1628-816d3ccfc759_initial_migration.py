"""Initial migration

Revision ID: 816d3ccfc759
Revises: 
Create Date: 2025-08-22 16:28:20.300328

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '816d3ccfc759'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('project_change_logs', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='更新时间'))
    op.alter_column('project_change_logs', 'tenant_id',
               existing_type=sa.UUID(),
               comment='租户ID',
               existing_nullable=False)
    op.alter_column('project_change_logs', 'project_id',
               existing_type=sa.UUID(),
               comment='项目ID',
               existing_nullable=False)
    op.alter_column('project_change_logs', 'change_type',
               existing_type=sa.VARCHAR(length=50),
               comment='变更类型',
               existing_nullable=False)
    op.alter_column('project_change_logs', 'field_name',
               existing_type=sa.VARCHAR(length=100),
               comment='变更字段名',
               existing_nullable=True)
    op.alter_column('project_change_logs', 'old_value',
               existing_type=sa.TEXT(),
               comment='原值',
               existing_nullable=True)
    op.alter_column('project_change_logs', 'new_value',
               existing_type=sa.TEXT(),
               comment='新值',
               existing_nullable=True)
    op.alter_column('project_change_logs', 'change_description',
               existing_type=sa.TEXT(),
               comment='变更描述',
               existing_nullable=True)
    op.alter_column('project_change_logs', 'change_reason',
               existing_type=sa.TEXT(),
               comment='变更原因',
               existing_nullable=True)
    op.alter_column('project_change_logs', 'changed_by',
               existing_type=sa.UUID(),
               comment='变更人',
               existing_nullable=True)
    op.alter_column('project_change_logs', 'id',
               existing_type=sa.UUID(),
               comment='主键ID',
               existing_nullable=False,
               existing_server_default=sa.text('gen_random_uuid()'))
    op.alter_column('project_change_logs', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               comment='创建时间',
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index('idx_project_change_logs_created_at', table_name='project_change_logs')
    op.drop_index('idx_project_change_logs_project_id', table_name='project_change_logs')
    op.drop_index('idx_project_change_logs_tenant_id', table_name='project_change_logs')
    op.alter_column('projects', 'priority',
               existing_type=sa.VARCHAR(length=20),
               comment='项目优先级',
               existing_nullable=True,
               existing_server_default=sa.text("'medium'::character varying"))
    op.alter_column('projects', 'start_date',
               existing_type=sa.DATE(),
               comment='计划开始日期',
               existing_comment='开始日期',
               existing_nullable=True)
    op.alter_column('projects', 'end_date',
               existing_type=sa.DATE(),
               comment='计划结束日期',
               existing_comment='结束日期',
               existing_nullable=True)
    op.alter_column('projects', 'manager_name',
               existing_type=sa.VARCHAR(length=100),
               comment='项目经理姓名',
               existing_nullable=True)
    op.create_unique_constraint(None, 'projects', ['project_code'])
    op.create_foreign_key(None, 'projects', 'users', ['updated_by'], ['id'])
    op.create_foreign_key(None, 'projects', 'users', ['manager_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'projects', type_='foreignkey')
    op.drop_constraint(None, 'projects', type_='foreignkey')
    op.drop_constraint(None, 'projects', type_='unique')
    op.alter_column('projects', 'manager_name',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='项目经理姓名',
               existing_nullable=True)
    op.alter_column('projects', 'end_date',
               existing_type=sa.DATE(),
               comment='结束日期',
               existing_comment='计划结束日期',
               existing_nullable=True)
    op.alter_column('projects', 'start_date',
               existing_type=sa.DATE(),
               comment='开始日期',
               existing_comment='计划开始日期',
               existing_nullable=True)
    op.alter_column('projects', 'priority',
               existing_type=sa.VARCHAR(length=20),
               comment=None,
               existing_comment='项目优先级',
               existing_nullable=True,
               existing_server_default=sa.text("'medium'::character varying"))
    op.create_index('idx_project_change_logs_tenant_id', 'project_change_logs', ['tenant_id'], unique=False)
    op.create_index('idx_project_change_logs_project_id', 'project_change_logs', ['project_id'], unique=False)
    op.create_index('idx_project_change_logs_created_at', 'project_change_logs', ['created_at'], unique=False)
    op.alter_column('project_change_logs', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='创建时间',
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('project_change_logs', 'id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='主键ID',
               existing_nullable=False,
               existing_server_default=sa.text('gen_random_uuid()'))
    op.alter_column('project_change_logs', 'changed_by',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='变更人',
               existing_nullable=True)
    op.alter_column('project_change_logs', 'change_reason',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='变更原因',
               existing_nullable=True)
    op.alter_column('project_change_logs', 'change_description',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='变更描述',
               existing_nullable=True)
    op.alter_column('project_change_logs', 'new_value',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='新值',
               existing_nullable=True)
    op.alter_column('project_change_logs', 'old_value',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='原值',
               existing_nullable=True)
    op.alter_column('project_change_logs', 'field_name',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='变更字段名',
               existing_nullable=True)
    op.alter_column('project_change_logs', 'change_type',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='变更类型',
               existing_nullable=False)
    op.alter_column('project_change_logs', 'project_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='项目ID',
               existing_nullable=False)
    op.alter_column('project_change_logs', 'tenant_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='租户ID',
               existing_nullable=False)
    op.drop_column('project_change_logs', 'updated_at')
    # ### end Alembic commands ###
